** 테이블 삭제
drop table 테이블이름;

**테이블 생성
create table 테이블명 (변수명 변수타입,.....);

-----------------------------------------------
DAO: Database Access Object
	데이터베이스 테이블에 접근하여
	자료를 추가, 읽기, 수정, 삭제를 담당하는 객체

-> 수정하기가 용이하다.
------------------------------------------------------------

JOptionPane.showMessageDialog(this, "부서를 등록하였습니다");
	첫번째 매개변수에는 Frame객체를 전달해야한다.
	현재 객체는 ActionLister인터페이스를 구현한 객체이지 Frame 객체가 아님. 그래서 error
	
	그렇기 때문에 JFrame f 변수 선언
	생성시에 나를(this) f가 참조하도록 생성해주면 된다.
	
	JOptionPane.showMessageDialog(f, "부서등록에 실패하였습니다.");

--------------------------------------------------------------------------------
예외발생

The Network Adapter could not establish the connection (CONNECTION_ID= ~)

작업관리자 - 서비스 Oracle로 시작되는 서비스가 모두 실행중인가?

------------------------------------------------------------------------------------------------

** 데이터베이스 명령어

	1) DCL : 데이터 제어어
		DataBase Control Language
		데이터관리자(system/sys)가 사용할 수 있는 명령어
		사용자계정을 생성, 권한 부여, 권한 제거 등의 명령어들을 말한다.
		
		create user ~
		grant ~
		revoke ~
		
	2) DDL : 데이터 정의어
		Database Defination Language
		리소스(테이블 or view, Index, ..)를 생성, 제거, 변경 하는 명령어들을 말한다.
		
		create table ~
		alter table~
		drop table ~
		
	3) DML : 데이터 조작어
		Database Manuflation Language
		만들어진 테이블의 데이터를 추가, 검색, 수정, 삭제하는 명령어
		레코드를 추가, 수정, 검색, 삭제 하는 명령어들을 말한다.
		
		insert, d
	** DML을 중점적으로 배운다
	
** 실습을 위한 system계정에 접속하여
	사용자 계정 생성

sql 접속중이라면

sql> exit
c:\> sqlplus system/manager

or
sql> conn system/manager

**사용자계정 생성하고 권한부여

create user 유저이름 identified by 암호
grant 권한이름1, 권한이름2, ... to 유저이름
		(roll)

** 이름이 c##madang이고 암호가 madang 인 사용자 계정 생성 후
연결할 수 있는 권한, 리소스를 생성할 수 있는 권한, 관리자처럼 모든권한을 부여
create user c##madang identified by madang;
grant connect, resource, dba to c##madang;

** 사용자 변경
SQL> conn c##madang/madang

--DCL
-----------------------------------------------------------------


-서점관리에 필요한 테이블들을 생성

	도서 : 도서번호, 도서명, 출판사명, 가격
	고객 : 고객번호, 고객이름, 주소, 전화
	주문 : 주문번호, 도서번호, 고객번호, 구매가격, 구매일
	

**관계형 데이터베이스
	두 테이블에 공통으로 들어가는 컬럼이 있다.
	도서: 도서번호 - 주문: 도서번호
	고객: 고객번호 - 고객: 고객번호

create table book(
bookid number primary key,
bookname varchar2(50),
publisher varchar2(50),
price number
);

create table customer(
	custid number primary key,
	name varchar2(20),
	address varchar2(50),
	phone varchar2(20)
);

//order = 오라클 안의 명령어 이기때문에 테이블명으로 사용불가
//날짜를 위한 자료형 = date

create table orders(
	orderid number primary key,
	custid number references customer(custid),
	bookid number references book(bookid),
	saleprice number,
	orderdate date
);

--DDL

ed 테이블관련파일명
@테이블관련파일명

---------------------------------------------
**"book"테이블에 자료를 추가하기
insert into book values(1, '축구의 역사', '굿스포츠', 7000);
insert into book values(2, '축구 아는여자', '나무수', 13000);
insert into book values(3, '축구의 이해', '대한미디어', 22000);
insert into book values(4, '골프 바이블', '대한미디어', 35000);
insert into book values(5, '피겨 교본', '굿스포츠', 8000);
insert into book values(6, '역도 단계별 기술', '굿스포츠', 6000);
insert into book values(7, '야구의 추억', '이상미디어', 20000);
insert into book values(8, '야구를 부탁해', '이상미디어', 13000);
insert into book values(9, '올림픽 이야기', '삼성당', 7500);
insert into book values(10, 'Olympic Champions', 'Pearson', 13000);

---
sql 상태에서 
조작하고 난뒤엔
반드시 commit 해주어야한다.

**데이터를 추가,수정,삭제 한 후에는 반드시 commit 해야합니다.

**"customer" 테이블에 자료 추가하기
insert into customer values(1, '박지성', '영국 멘체스타', '010-5000-0001');
insert into customer values(2, '김연아', '대한민국 서울', '010-6000-0002');
insert into customer values(3, '장미란', '대한민국 강원도', '010-7000-0002');
insert into customer values(4, '추신수', '미국 클리블랜드', '010-8000-0003');
insert into customer values(5, '박세리', '대한민국 대전', null);


SQL> desc orders;
 이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 ORDERID                                   NOT NULL NUMBER
 CUSTID                                             NUMBER
 BOOKID                                             NUMBER
 SALEPRICE                                          NUMBER
 ORDERDATE                                          DATE

insert into orders values(1,1,1,6000,'2021/11/01');
insert into orders values(2,1,3,21000,'2021/11/03');
insert into orders values(3,2,5,8000,'2021/11/03');
insert into orders values(4,3,6,6000,'2021/11/04');
insert into orders values(5,4,7,20000,'2021/11/04');
insert into orders values(6,1,2,12000,'2021/11/05');
insert into orders values(7,4,8,13000,'2021/11/07');
insert into orders values(8,3,10,12000,'2021/11/09');
insert into orders values(9,2,10,7000,'2021/11/07');
insert into orders values(10,3,8,13000,'2021/11/08');

=======================================================================================

데이터베이스 명령어
(SQL - structured query Language)
	- DCL
	- DDL
	- DML
----------------------------------------------------------------------------------------
	
DML(데이터 조작어)
	-insert 데이터 추가
	-select 데이터 조회(검색) == quert 지리어
	-update 데이터 수정
	-delete 데이터 삭제

--------------------------------------------------------------------

** 데이터 조작어 --> 검색 ( select )
=> 데이터를 조회하는 명령어를 특별히 query라고도 부름 

** select 명령어의 기본구조
	
	select 보고싶은컬럼명1, 컬럼명2, ....
	from 테이블이름 
	[where 조건식] -> 잇을수도 잇고 없을수도잇다.
	
-----------------------------------------------------------------------------

연습_ 모든 도서의 도서명, 가격을 검색
	select bookname,price
	from book;
	
연습_ 모든 도서의 도서번호, 도서명, 출판사명, 가격을 검색
	select bookid,bookname,publisher,price from book;
	select * from book;
	
	*: 모든 컬럼
	만약) 순서를 정해서 출력하고 싶다면 
	select bookname,publisher,price,bookid from book;

연습_ 출판사가 '이상미디어'인 모든 도서의 도서명, 가격을 검색
	select bookname, price from book where publisher = '이상미디어';

	*주의사항 : 공백도 하나의 문자로 치기 때문에 고대로 입력해야함

연습_ '김연아' 고객의 주소와 전화번호를 검색
select address, phone from customer where name = '김연아';

연습_ 모든 출판사명을 출력
select publisher from book;		

PUBLISHER
--------------------
굿스포츠
나무수
대한미디어
대한미디어
굿스포츠
굿스포츠
이상미디어
이상미디어
삼성당
Pearson

=> 중복제거하고 한번만 출려갛고자 할 때,
	distinct 키워드 사용 -- column 하나를 검색할때만! 사용가능

select distinct publisher from book;

연습_ 가격이 20000원 미만인 도서의 정보를 출력
select * from book where price < 20000;

** where 조건식에 사용하는 연산자들

	비교연산자 : =	>	>=	<	<=	<>(같지않다) !=
	
	범위연산자 : between 값1 and 값2
	
	집합연산자 : in (값1, 값2, .....) ~에 해당이되냐
				not in(값, 값2, ...) ~에 해당이 안되냐
				
	패턴연산자 : like 특정패턴을 검사하는 연산자
	
	논리연산자 : and, or, not(!)
	
	null인지아닌지 : is null
					 is not null
					 
연습_ 가격이 10000원 이하인 도서의 도서이름,가격,출판사명 검색
select bookname, price, publisher from book where price<=10000;

연습_ 가격이 10000원 이상 20000원 이하인 도서 검색
select * from book where price>=10000 and price<=20000;
select * from book where price between 10000 and 20000;

연습_출판사가 '굿스포츠'혹은 '대한미디어'인 도서검색
select * from book where publisher = '굿스포츠' or publisher = '대한미디어';
select * from book where publisher in('굿스포츠','대한미디어');


연습_출판사가 '굿스포츠'도아니고 '대한미디어'도 아닌 도서검색
select * from book where publisher not in('굿스포츠','대한미디어');
select * from book where publisher <> '굿스포츠' and publisher <> '대한미디어';
select * from book where publisher != '굿스포츠' and publisher != '대한미디어';

연습_ '이상미디어' 나 '굿스포츠'에서 출간한 도서 중 가격이 10000원 이상인 도서의 도서명, 가격, 출판사명 검색

select bookname,price,publisher from book where publisher = '이상미디어' or publisher = '굿스포츠' and price >= 10000;
select bookname, price, publisher from book where publisher in('굿스포츠','이상미디어') and price >= 10000;

-----------------------------------------------------------------------------------------------------------------------------------
**like 연산자
	문자열 데이터에 있어 어떠한 패턴을 따르는지 검사할 때 사용
	
	ex) 이름이 '김'으로 시작하는 데이터 검색
		혹은 도서명에 '축구'가 들어가는 데이터 검색
		
	like 연산자와 같이 사용하는 기호
	_ 모르는 하나의 글자를 대신하는 기호, 반드시 하나의 글자가 있어야함
	ex) 임상_ 
	% 모르는 아무글자를 대신하는 기호(0글자, 한글자, ....)
		-> 글자가 있어도 좋고, 없어도 좋고, 몇개가 있어도 좋고, 글자의 길이 no 상관
	
	select * from customer where name like '김%';
	-> 김
	-> 김연아
	-> 김숙
	-> 김가나다라마바사
	
	select * from customer where name list '김_';
	-> 김숙
	
	select * from customer where name list '김__';
	-> 김연아
	
	select * from book where bookname like '축구%';
	-> 책이름이 '축구'로 시작하는 도서를 모두 검색
	
	select * from book where bookname like '%축구';
	-> 책이름이 '축구로 끝나는 도서를 모두 검색
	
	select * from book where bookname like '%축구%';
	-> 책이름중에 어디라도 '축구'글자가 들어가는 도서를 모두검색
	
	insert into book values(11,'재미있는 축구', '쌍용미디어', 17000);
	연습_ 도서이름에 '구'글자가 포함되는 모든 도서의 이름과 가격을 출력하시오
	select bookname,price from book where bookname like '%구%';
	
	연습_도서이름의 두번째 글자에 '구'가 포함되는 모든 도서의 정보를 출력하시오.
	select * from book where bookname like '_구%';
	
	연습_'축구'관련 도서중에 가격이 20000원 이상인 도서의 정보를 출력하시오
	select * from book where price >= 20000 and bookname like '%축구%';
	
	연습_'굿스포츠' 나 '대한미디어'의 도서중에 '축구'관련 도서의 정보를 출력하시오
	select * from book where publisher in('굿스포츠','대한미디어') and bookname like '%축구%';
	
-----------------------------------------------------------------------------------------------------------------------

	순서대로 출력
	-> select 명령어 끝에 'order by' 사용
	
	오름차순 정렬 order by 컬럼 [asc]
	내림차순 정렬 order by 칼럼 desc
	
	order by 컬럼1 [asc/desc], 컬럼2 [asc/desc]
	
	연습_ 모든 도서의 정보를 도서명 순으로 출력
		select * from book order by bookname;
		select * from book order by bookname desc;
	
	연습_ '이상미디어'나 '대한미디어' 혹은 '굿스포츠'에서 출간한 도서 중에
		'축구' 관련 도서 중에 가격이 6000원 ~ 30000사이인 도서의 도서명, 출판사명, 가격을 출력하시오
		(단, 출판사명으로 출력하고 , 출판사명이 동일할 때에는 가격이 높은순으로 출력)
		
		select bookname, publisher, price from book where
		publisher in('이상미디어', '대한미디어', '굿스포츠') and
		bookname like '%축구%' and
		price between 6000 and 30000
		order by publisher, price desc;
	
	insert into book
	values(12, '이기는 축구기술', '굿스포츠', 20000);
	
	연습_ '이상미디어'에 출간하는 모든 도서의 목록을 출력하시오
		단, 도서가격이 높은 순으로 출력
	
	select * from book where publisher = '이상미디어'
	order by price desc;
	
	연습_ 사용자한테 출판사 이름을 입력받아
		그 출판사에 출간하는 모든 도서정보를 출력
		단, 도서의 가격이 높은수으로 출력
		
		
		출판사명을 매개변수로 전달받아 해당 출판사의 모든 도서목록을 검색하여 ArrayList로 반환하는 메소드 정의
		팀별로 아래의 메소드의 내용 완성
		GUI로 만들기
		화면구성, 클래스이름등은 자유롭게
		
	숙제.
	사용자한테 고객번호를 입력받아 그 고객이 주문한 모든 주문내역을 출력하는 프로그램
	
	
	