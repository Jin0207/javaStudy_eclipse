숙제2) "메모장"에서 다음과 같은 기능을 구현해본다
		 1. 저장하지 않고 "새파일"이나 "열기"를 누르면 
		 "저장하시겠습니까?"라고 물어보고 저장하도록 처리
		 
		 2. 만약에 파일을 불러온 상태이거나 이미 저장되어 있는 상태에서 내용을 변경한다음 
		 	저장을누르면 이름을 묻지않고 그 이름으로 저장하도록 구현

** 멤버변수를 하나 추가해야 겠다.
--> 파일을 저장한 이후에 혹은 파일을 열어온 이후에
 	변경된 내용이 있는 지, 없는 지 판별할 변수
 	
 	한 글자라도 변경이 되었다면 true를 저장하고
 	저장한 순간 & 열어온 순간은 변경된 내용이 없으니 false를 저장하도록
 	
 	그래서, "새 파일"을 누르면
 	저 변수가 true인지 판별하여
 	"저장하시겠습니까?"라고 물어보도록
 	
 --> isNew에 언제 true가 들어가나?
 	텍스트에리어에 글씨가 써질 때
 	
 	텍스트에리어에 글씨가 써지는 이벤트(KeyListener)를 등록해야한다.
 	
 	 JOptionPane
 	 Method Name	Description
showConfirmDialog	Asks a confirming question, like yes/no/cancel.
showInputDialog	Prompt for some input.
showMessageDialog	Tell the user about something that has happened.
showOptionDialog	The Grand Unification of the above three.
 
 ==================================================================================================================
 
 <<네트워크 프로그래밍>>
 --> 네트워크 상, 두대 이상의 컴퓨터 끼리 서로 데이터를 주고 받는 프로그래밍
 
 --> 자바에서는 네트워크프로그램을 위하여,
 		java.net 패키지에 관련 클래스와 인터페이스를 모아두었다.
 
 ** 네트워크 기본 용어
 
 - ip address
 	네트워크 상의 특정 컴퓨터를 구별하기 위한 식별자를 말함
 	네트워크 통신을 하려면 통신할 대상컴퓨터를 정해야하는 데, ip address를 가지고 정할 수 있다.
 
 - port 번호
 	하나의 컴퓨터에서 동시에 여러 개의 네트워크 프로그램이 실행 될 수 있다.
 	이때, 특정 프로그램을 식별하기 위한 역할을 port 번호로 구별한다.
 	
 	하나의 컴퓨터를 구별하기 위한 식별자는 ip address
 	그 컴퓨터에서 동시에 실행되는 프로그램을 식별하는 것은 port 번호
 	
 	ex)
 	줌도 실행시켜놓고 카카오톡도 실행시켜놓았을 때,
 	카카오톡에서 작성한 메세지가 zoom으로 가면 이상함ㅁ
 	그러니 특정 네트워크프로그램을 식별하기 위한 식별자 역할이 필요
 	
 	우리가 만드는 네트워크 프로그램에도
 	포트번호를 정해놓고
 	그 포트번호로 접속하도록 해야한다.
 	
 - TCP 방식
 	현실세계의 전화와 같은 개념
 	통신을 할 컴퓨터와 연결을 먼저 맺어 놓고
 	그 연결된 회선을 통해 메세지를 주고받는 방식

	장점: 신뢰성이 높다 -- 데이터가 유실될 일 이없다
	단점: 네트워크의 부담이 높다 -- 항상 연결되어있어야하니깐

	자바에서는
	Socket클래스와 ServerSocket을 이용하여
	TCP방식의 네트워크 프로그램을 구현할 수 있다.

		
 - UDP 방식
	현실세계의 편지와 같은 개념
	통신을 할 컴퓨터와 연결을 맺지 않고,
	데이터를 무조건 보내는 방식 
 
 	장점: 네트워크 부담이 낮다
 	단점: 신뢰성이 낮다 -- 데이터가 유실될 수 있다.

	연결이 되어 있지 않기 때문에 데이터를 보낼 때마다 Packet단위로 보내야한다.
	Packet안에는 목적지의 안의 주소도 포함되어있다. 
 
 	자바에서는
 	DataGramPacket 과 DatagramSocket을 이용하여
 	UDP 방식의 네트워크 프로그램을 구현할 수 있다.
 
 	연결을 먼저 맺어 놓은게 아니기 때문에
 	데이터를 보낼 때 마다
 	목적지의 주소와 데이터가 합쳐진
 	패킷단위로 전송해야한다.
 
 
 
 
 
 *InetAddress
 인터넷주소와 관련된 클래스
 생성자가 없고
 static 변수를 통하여 객체 생성
 
 인터넷 상, 컴퓨터이름 및 ip주소의 정보를 위한 클래스
 생성자가 없고, 다음의 static 메소드를 통해 객체를 생성할 수 있다. 
 
 static InetAddress	getByName(String host)
	Determines the IP address of a host, given the host's name.
 
--------------------------------------------------------------------------------------------------------
네이버 서버의 ip서버를 확인해보기

https://www.naver.com/


www.naver.com/223.130.195.95
ip주소를 사람들이 기억하긴 어렵다.
그렇기 때문에,
해당 ip주소에 매칭되는 문자로되어있는 것을 대신 사용한다.
==> "도메인 네임"

규모가 큰 서비스의 경우,
서버가 위험에 대비하기 위하여, 세컨드리 서버를 둘 수 있다.
static InetAddress[]	getAllByName(String host)
	Given the name of a host, returns an array of its IP addresses, based on the configured name service on the system.
	getAllByName(String host) 메소드를 이용하면
	그 컴퓨터 이름에 해당하는 모든 InetAddress



URL 클래스
Uniform Resource Locator
인터넷상 문서의 위치를 갖고 있는 객체

이것을 이용하면, 스트림을 통해서
인터넷상 문서의 내용을 수집(긁어)할 수 있다.

네트워크를 통해 데이터를 수신할 때에는
byte의 일정한 양의 배열로 수신한다.

이것을 다시 문자열로 만들기 위해서는
String(byte[] data)의 생성자를 이용

그러나 한글인 경우,
한글이 깨져서 표현이 된다.

한글 처리를 위해서는,
다음의 생성자를 이용한다.
String(byte[] bytes, String charsetName)

이때, 한글을 위한 문자셋의 종류로는
euc-kr,
utf-8이 있다.

요즘은 utf-8을 더 많이 쓴다. 

생성자
URL(String spec)
	Creates a URL object from the String representation.
URL(String protocol, String host, int port, String file)
	Creates a URL object from the specified protocol, host, port number, and file.
InputStream	openStream()
	Opens a connection to this URL and returns an InputStream for reading from that connection.
	반환 InputStream 타입

-------------------------------------------------------------------------------------------------------------------

Server
	네트워크 상에서 서비스를 제공하는 컴퓨터 혹은 프로그램을 말함

Client
	네트워크 상에서 서비스를 제공받는 컴퓨터 혹은 프로그램을 말함

-------------------------------------------------------------------------------------------

TCP 방식의 네트워크 프로그래밍 절차

-서버측
1) ServerSocket을 통하여 서버를 가동합니다.
ServerSocket(int port)
	Creates a server socket, bound to the specified port.
이때, 클라이언트와 약속된 포트번호를 정해야한다.

계속 클라이언트가 접속할 때까지 무한 대기상태에 있어야한다.

3) 클라이언트의 요청을 수락
accept()
	Listens for a connection to be made to this socket and accepts it.
 	Socket을 반환
 	반환되는 Socket을 통하여 클라이언트와 데이터를 주고 받을 수 있다. == 데이터소켓
 	
 4) Socket을 통하여 데이터를 주고받을 스트림을 생성
 	InputStream	    getInputStream()	
 	OutputStream	getOutputStream()
 
 5) 데이터를 주고 받는다.	
 
 6) 사용했던 스트림 닫아줌.
 
 
 -클라이언트측
2) Socket을 통하여 서버에 통신을 요청합니다.
Socket(InetAddress address, int port)
	Creates a stream socket and connects it to the specified port number at the specified IP address. 

Socket(String host, int port)
	Creates a stream socket and connects it to the specified port number on the named host.

 	host는 서버의 ip주소 이며,
	 port는 서버에서 정한 port번호
 4) Socket을 통하여 데이터를 주고받을 스트림을 생성
 	InputStream	    getInputStream()	
 	OutputStream	getOutputStream()
 
  5) 데이터를 주고 받는다.
 	
  6) 사용했던 스트림 닫아줌	
 	
 	 
 	서버												클라이언트
 1.서버를 가동하는 방법이 ServerSocket
 												2.통신을 요청하기위해 Socket()객체를 생성
 3. 통신을 수락하기위해 accept()호출
 4. 데이터를 주고 받을 스트림을 생성                      데이터를 주고 받을 스트림을 생성
 5. 데이터를 주고 받을 스트림을 통해서 데이터를 주고 받는다,    데이터를 주고 받을 스트림을 통해서 데이터를 주고 받는다
 6. 통신이 끝났으면 사용했던 스트림을 닫아준다.               통신이 끝났으면 사용했떤 스트림을 닫아준다.
 
 -------------------------------------------------------------------------------
 ip주소 확인하는 명령
 cmd에서
 c:/> ipconfig
 
 내 컴퓨터의 ip주소 대신에 
 		127.0.0.1
 		localhost
 		를 사용할 수 있다. (내컴퓨터라고 컴퓨터에게 알려줌)
 
 ===============================================================================
 
 UDP방식
 
 DatagramPacket
 	DatagramPacket(byte[] buf, int length, InetAddress address, int port)
 			사용자가보내고자하는메세지, 배열길이,ip주소 , 포트번호
 	DatagramPacket(byte[] buf, int length)
 	
 DatagramSocket
 	DatagramSocket(int port)
 	send(DatagramPacket p)
 	receive(DatagramPacket p)
 	
=====================================================================

이너클래스(클래스 안 클래스)

다른 곳에서 쓸 데가 없는 기능을 따로 파일에 만들 필요가 없으니
클래스 안에 클래스를 작성하여
그 기능을 거기서만 쓸 수 있게 하는 것

이너클래스는 마치 outter클래스 멤버처럼 동작함
outter클래스의 멤버에 자유롭게 접근할 수 있음



바깥의 클래스를 outter class라고 함
(이너클래스를 감싸고 있는 클래스).


============================================================================

숙제//
UDP 완성하기

com.sist.echo를 복사하여
TCPchatServer를 한번에 여러명의 클아이언트로부터
동시에 메세지를 받아 메아리하도록 구현해보도록


