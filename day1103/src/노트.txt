window - perspective - reset perspectiv
이클립스 화면을 초기화

----------------------------------------

이너클래스 ( inner class)
	클래스 안에 포함되는 또 다른 클래스를 말한다.
	해당 클래스가 다른 곳에서는 필요하지 않고
	특정 클래스 안에서만 필요한 경우 편리하게 만들어 사용할 수 있다.
	
	inner 클래스를 포함하고 있는 클래스를 outter 클래스라고 한다.
	inner 클래스는 마치 자신이 outter 클래스의 멤버인 것처럼 동작한다.
	즉,
	outter 클래스의 멤버에 자유롭게 접근할 수 있다.
	
	그러나,
	outter 클래스는 inner 클래스에 직접 접근할 수 없고,
	접근하려면 객체를 생성하고
	객체를 통해서 접근해야한다.
	
어떤 경우에 이너클래스를 사용할까?
	Thread 프로그래밍을 할 때
	그 기능이 다른 곳에서는 필요하지 않고
	특정 클래스 안에서만 동작해야될 Thread인 경우에
	inner class로 만든다.

	특정 일처리를 하는 Thread가 해당 클래스에서만 필요해
	
	예를들어, 채팅프로그램의 경우
	채팅프로그램에서 클라이언트를 위한
	ChatClient 클래스에서 사용자가 입력한 대화내용을 서버로 보낸 것은 버튼을 눌렀을 때에 보내도록 한다.
	이 일처리와 상관없이, "서버"가 보내오는 메세지를 계속 수신하는 쓰레드가 필요하다.
	(버튼을 눌러서 대화내욜을 보내는 것과는 별개로 서버가 보내오는 메세지를 계쏙 수신하기를 바람)
	
	이 쓰레드는 ChatClient 클래스에서만 필요함
	그래서 이 부분을 inner 클래스로 만들어 표현
	
	이너클래스의 경우 클래스 이름이 중요하지 않음
	인터페이스를 이름없이 바로 객체를 생성해버리고 메소드를 구현해버림
	ex)
	new Runnable(){}

---------------------------------------------------------------------------------------------

데이터베이스 연결 프로그래밍

- "데이터베이스"는 왜 필요한가?
	
	프로그램 실행한 결과를 화면에 출력하면,
	컴퓨터 전원을 끄는 순간 그 결과가 날아가버림 --> 휘발성
	
	그 결과를 영구적으로 보관하려면, 파일을 이용합니다.
	
	그런데, 파일은 이해관계에 있는 여러사람들이 
	항상 최신의 정보를 공유하기에는 어려움이 있다.
	
	그래서,
	이해관계에 있는 사람들이 항상 최신의 정보를 공유하도록 
	자료를 한 곳에 모아두면 좋을 것 같다.
	--> 한곳에 자료를 모아두는 것이 "데이터베이스"
	
	데이터베이스를 잘 사용할 수 있도록 도와주는 시스템을
	"데이터베이스 관리시스템"이라고 한다.
	DataBase Management System ( DBMS )
	
	DBMS의 종류
	oracle, ms-sql, my-sql, mariadb 등이 있다.
	
	주로, oracle을 많이 사용
	-> oracle 위주로 학습
	
	교육용 oracle XE
	install oracle XE
	
--------------------------------------------------------------------------------------------------------

설치할 때
관리자계정(System, sys)의 암호
manager

데이터베이스 명령을 내리기위하여 sqlplus 프로그램 실행
c:\> sqlplus
사용자이름: system
암호: manager


데이터베이스 명령어를 sql이라고 한다.
Structured query language (데이터베이스 명령어)
sql>	

사용자계정을 만듦              암호설정 명령어
sql>create user c##sist identified by sist

사용자계정에게 권한 부여
sql>grant connect, resource, dba to c##sist
    권한부여 데이터베이스연결

관리자계정이 데이터베이스에서 나간다.
sql>exit

이상태가됨
c:>	

사용자계쩡이 접속
c:>sqlplus
사용자이름: c##sist
암호: sist

사용자계정에 접속한상태
sql>

---------------------------------------------------------------------
데이터베이스 연결프로그램 연습

사용자한테 이름, 국어, 영어, 수학 점수를 입력받아 데이터베이스에 저장(추가)하는 프로그램을 구현

데이터베이스에 저장하기위해서는 데이터베이스의 테이블을 먼저 만들어놔야함

속성(열, 필드)
이름		국어		영어		수학
홍길동	100		80		90   -> 레코드(행,row) : 한사람에대한 정보
이순신	80		90		100
유관순 	70		100		100	
	
--> 행과 열로 구성된 자료의 집합을 "테이블"이라고 한다.

데이터베이스는 서로 관련이 있는 테이블 여러개가 모여서 테이터베이스를 구성하는 것이다.	
	
------------------------------------------------------------------------------

테이블 생성 명령어 == 데이터베이스 명령어
테이블 만드는 명령어의 형식
create table 테이블이름(속성이름 해당속성의자료형, 속성이름2 자료형2, .....)

테이블이름 속성이름은 영어 한글 모두되지만 권장하는 것은 영어로 만드는 것

문자열을 위한 자료형 varchar2(길이)
*길이: 몇자이내의 데이터를 쓸거냐 -- 가변적 문자열 길이 -- 100이라고 지정하고 2길이를 저장하면 2만 차지

숫자자료형 number


create table student(name varchar2(20), kor number, eng number, math number);

한글 1글자 = 3개가 필요

한줄에 명령어를 작성
sql>create table student(name varchar2(20), kor number, eng number, math number);

여러줄에 걸쳐서 명령어 작성
sql>create
table
student(name varchar2(20), 
kor number, 
eng number, 
math number);

데이터베이스가 잘 만들어졌는지 확인
테이블 구조를 파악하는(보여주는) 명령어
sql>desc 테이블이름

테이블에 자료를 추가하는 데이터베이스 명령어

insert into 테이블이름 values(값1, 값2, ....);

이때, 값의 수와 순서는 테이블의 구조와 같아야한다.

오라클에서 문자열을 반드시 홋따옴표로 묶어야한다. (')

이렇게 추가한 내용을 dbms에 반영하려면
반드시
commit을 해야한다.

만약,
이렇게 추가한 내용을 취소하려면 rollback을 합니다.
------------------------------------------------------------------
테이블의 자료를 조회하기
select * from 테이블이름;

select * from student;

---------------------------------------------------------------------
자바프로그램에서
사용자가 입력한 이름,국어,영어,수학 을 갖고
테이블에 추가하는 데이터베이스 명령어를 실행하도록 프로그램을 작성해보자

자바에서 데이터베이스에 연결한다
java DataBase Connect
JDBC 연결 프로그래밍

-------------------------------------------------

** 자바에서 데이터베이스 연결 프로그래밍 순서(JDBC 프로그래밍 순서)

1.  jdbc드라이버를 메모리로 로드한다.
   
   Class.forName(드라이버이름);
	Class.forName(oracle.jdbc.driver.OraclDriver);

2. DB서버에 연결한다.
	Connection conn =
		DriverManager.getConnection("서버의주소", "사용자이름", "암호");

3. 데이터베이스 명령을 실행할 Statement 객체 생성
	
	Statement stmt = conn.createStatement();

 Statement  createStatement()
Creates a Statement object for sending SQL statements to the database.

4. 데이터 베이스 명령을 실행
	int re = stmt.executeUpdate(데이터베이스명령어)
		성공적으로 수행한 레코드의 수를 받아와서 re에 담음
		
	ResultSet rs = stmt.executeQuery(데이터베이스명령어)
		읽어온 결과를 ResultSet으로 반환
	
	ResultSet	executeQuery(String sql)
		데이터베이스에 있는 내용을 검색(조회)하고 싶을 떄
		
		
		
	int	executeUpdate(String sql)
	 	데이터베이스의 새로운 레코드를 추가, 수정, 삭제 등 데이터베이스에 변경이 있는 명령을 실행할 때
		== 데이터베이스에 변경이 있는 명령을 시킬 때 사용
		
		int를 반환하는 데, 내가 시킨 명령어를 실행한 레코드의 수를 반환
		
		ex)
		insert를 시켯어 그것을 몇개했는지 반환
		수정을 몇개 레코드를 수정했는 지 반환
		
	
5. 일처리를 한다.

6. 사용했던 자원을 모두 닫아준다.
	rs.close();
	stmt.close();
	conn.close();



@localhost:1521:XE
          포트번호: 서비스명


===================================================
실행했더니 다음과 같은 오류 발생

예외발생: oracle.jdbc.driver.OracleDriver
-- driver가 어디있는지 몰라서 예외 발생
	driver가 어디있는지 알려주어야한다 -> 이클립스에 포함시켜주어야한다
	
	오라클이 설치된 다음의 경로에
	C:\app\Administrator\product\21c\dbhomeXE\jdbc\lib

	ojdbc8.jar 파일 안에 해당 클래스가 있음
	그래서 이것을 포함시켜야함
	프로젝트이름의 오른쪽 단추를 누르고
	properties를 누르고
	java Build Path 의 Libraries
	classpath를 누르고 add External jars
	C:\app\Administrator\product\21c\dbhomeXE\jdbc\lib

	ojdbc8.jar 파일 선택하고 apply and close
	

-----------------------------------------------
ResultSet

boolean	 next()
	Moves the cursor forward one row from its current position.
	현재위치로부터 한행씩 옮겨주는 메소드
	더이상 옮길 게 없다 false
	
	오라클
	컬럼의 인덱스는 1부터 시작한다
	
	getString(인덱스값 or 컬럼라벨)
	getString(int columnIndex)
	getString(String columnLabel)
	
	getInt()
	
	
	
	숙제
	1. 오늘 학습한 내용 복습
	2. 다음과 같은 테이블을 만들고 
		새로운 레코드를 추가하는 프로그램을 gui로 만들어 봅니다.
		(화면구성, 클래스이름, 변수명 등은 자유롭게)
		
		상품
			상품번호
			상품명
			수량
			단가
	
	3. 모든 상품을 조회하여(읽어와) 출력하는 프로그램을 gui로 만들어봅니다
		JTextArea나 
		JTable